name: CI

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    # Skip CI on pushes to main branch, since this is just for PR validation
    if: github.ref != 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Install Python dependencies
        run: pip install pyyaml jsonschema
          
      - name: Generate JSON from YAML definitions
        run: |
          mkdir -p form-app/src/assets
          
          python script/run_validate_and_inject.py \
            --schema schemas/formSchema.json \
            --source sources/prescan_DPIA.yaml \
            --begrippen-yaml sources/begrippenkader.yaml \
            --output form-app/src/assets/PreScanDPIA.json
            
          python script/run_validate_and_inject.py \
            --schema schemas/formSchema.json \
            --source sources/DPIA.yaml \
            --begrippen-yaml sources/begrippenkader.yaml \
            --output form-app/src/assets/DPIA.json
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'form-app/package-lock.json'
          
      - name: Install Node dependencies
        run: cd form-app && npm ci
        
      - name: Build the Vue application
        run: cd form-app && npm run build
        
      - name: Update docs folder
        run: |
          rm -rf docs/*
          cp -r form-app/dist/* docs/
          
          echo "Contents of docs folder after update:"
          ls -la docs/
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Build successful! The changes build correctly and the docs folder has been updated.'
            })
